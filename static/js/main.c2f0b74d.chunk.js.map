{"version":3,"sources":["components/Form.js","components/Output.js","App.js","reportWebVitals.js","index.js"],"names":["Input","styled","input","ButtonInput","Label","label","ZipcodeInput","form","Form","props","onSubmit","onChange","type","placeholder","value","zip","rotate","keyframes","fadeIn","P","p","DataDiv","div","WeatherInfo","h3","Output","loading","weatherTemp","weatherCity","weatherHigh","weatherLow","GlobalStyle","createGlobalStyle","Container","Greeting","App","useState","setZip","timeOfDay","setTimeOfDay","appState","setAppState","useEffect","time","Date","getHours","console","log","convertTemp","num","Math","round","className","evt","preventDefault","url","fetch","then","res","json","data","main","temp","name","temp_max","temp_min","catch","err","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2f0b74d.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Input = styled.input`\npadding: 1em;\nmargin: .5em;\nborder: none;\nborder-radius: 12px;\nfont-family: 'Inconsolata';\nfont-weight: 600;\n`;\n\nconst ButtonInput = styled(Input)\n`background-color: #0077b6;\ncolor:white;\n-webkit-appearance: none;\n-moz-appearance: none;\nappearance: none;\n`\n\nconst Label = styled.label`\ncolor: #caf0f8`\n\nconst ZipcodeInput = styled.form`\ndisplay: grid;\nalign-content: end;\njustify-items: center;\ngrid-template-columns: 70% 30%;\ngrid-column-start:2;\ngrid-row-start: 2;\nalign-items: center;\nalign-self: center;\n`\n\nfunction Form(props) {\n\n    return (\n            \n            <ZipcodeInput onSubmit={props.onSubmit}>\n              <Label>\n                <Input onChange={props.onChange} type=\"text\" placeholder='Zip Code' value={props.zip} />\n            </Label>\n            <ButtonInput type=\"submit\" value=\"Submit\" />\n            </ZipcodeInput>\n      \n    )\n}\n\nexport default Form\n","import React from 'react'\nimport styled from 'styled-components'\nimport { keyframes } from \"styled-components\"\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst fadeIn = keyframes `\nfrom{\n    opacity:0;\n}\nto{\n    opacity:1;\n}`\n\nconst P = styled.p `\nanimation: ${rotate} 2s linear infinite;\npadding: 1.5em;`\n\n\nconst DataDiv = styled.div`\npadding: 2em;\ngrid-column: 2/3;\ngrid-row: 3;\ntext-align: center;\n`\n\nconst WeatherInfo = styled.h3`\nanimation : ${fadeIn} 1s 1;\n`\n\nfunction Output(props) {\n   \n    if (props.loading) return <DataDiv><P>‚òÄÔ∏è   üå©Ô∏è   ‚ùÑÔ∏è </P></DataDiv>\n    return (\n        <DataDiv>\n        <WeatherInfo>It's currently {props.weatherTemp} in {props.weatherCity}</WeatherInfo>\n        <WeatherInfo>The high today will be {props.weatherHigh}</WeatherInfo>\n        <WeatherInfo>The low today will be {props.weatherLow}</WeatherInfo>\n        <P>‚òÄÔ∏è   üå©Ô∏è   ‚ùÑÔ∏è </P>\n      </DataDiv>\n    \n    )\n}\n\nexport default Output\n\n\n","\nimport './App.css';\nimport React , {useState, useEffect} from \"react\"\nimport Form from './components/Form.js'\nimport Output from './components/Output.js'\nimport styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #caf0f8;\n    font-family: \"Inconsolata\";\n  }`\n\nconst Container = styled.div\n  `\n  display: grid;\n  grid-template-columns: 25% 50% 25%;\n  grid-template-rows: 20vh 10vh 40vh;\n  justify-items: center;\n  `\nconst Greeting = styled.h3 `\ngrid-row:1;\ngrid-column: 2/3;\ndisplay: grid;\nalign-content: end;\npadding: 1em;`\n\nfunction App() {\n  const [zip, setZip] = useState(\"\");\n  // const [backgroundColor, setBackgroundColor]= useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const [appState, setAppState] = useState({\n    loading: true,\n    weatherTemp: null,\n    weatherHigh: null,\n    weatherLow: null,\n    weatherCity: null,\n  });\n\n  \n  \n  useEffect(() => {\n    let d = new Date(); \n    const time = d.getHours();\n    console.log(time);\n    if(time >=3 && time <12){\n      setTimeOfDay('Morning')\n    } else if (time >=12 && time <17){\n      setTimeOfDay('Afternoon')\n    } else if (time >=18 && time <= 2){\n      setTimeOfDay('Evening');\n    }\n    });\n\n  \n  \n    const convertTemp= (num) => {\n  return Math.round((num - 273.15) * 9 / 5 + 32) + '¬∞';\n}\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setZip('')\n    const url = `https://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=9ed68342d5c7db25c28b073aeae7a98b`\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        // const temp = Math.round((data.main.temp-273.15) * 9/5 + 32);\n        setAppState({loading: false, \n                      weatherTemp : convertTemp(data.main.temp), \n                      weatherCity: data.name, \n                      weatherHigh: convertTemp(data.main.temp_max), \n                      weatherLow: convertTemp(data.main.temp_min)})})\n      .catch((err) => console.log(err));\n      \n}\n\n  return (\n    <Container className='container'>\n      <Greeting>Good {timeOfDay}</Greeting>\n      <GlobalStyle/>\n     <Form onSubmit = {handleSubmit} onChange={e => {setZip(e.target.value)}} zip={zip}/>\n     <Output loading={appState.loading} weatherTemp={appState.weatherTemp} weatherCity={appState.weatherCity} weatherHigh={appState.weatherHigh} weatherLow={appState.weatherLow}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}